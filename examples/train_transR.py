import config
from  models import *
import json
import os

os.environ['CUDA_VISIBLE_DEVICES']=''
con = config.Config()
con.set_in_path("./benchmarks/IE15K-EKG/")
con.set_work_threads(8)
con.set_train_times(1)
con.set_nbatches(10)	
con.set_alpha(0.001)
con.set_bern(0)
con.set_dimension(50)
con.set_margin(1.0)
con.set_ent_neg_rate(1)
con.set_rel_neg_rate(0)
con.set_opt_method("SGD")
con.set_save_steps(100)
con.set_valid_steps(100)
con.set_early_stopping_patience(10)
con.set_checkpoint_dir("./checkpoint")
con.set_result_dir("./result")
con.set_test_link(False)
con.set_test_quadruple(False)
con.init()
con.set_train_model(TransE)
transe_state_dict = con.train()

def transR_main():
	conR = config.Config()
	conR.set_in_path("./benchmarks/IE15K-EKG/")
	conR.set_work_threads(8)
	conR.set_train_times(10)
	conR.set_nbatches(100)	
	conR.set_alpha(0.001)
	conR.set_bern(0)
	conR.set_dimension(50)
	conR.set_margin(1.0)
	conR.set_ent_neg_rate(1)
	conR.set_rel_neg_rate(0)
	conR.set_opt_method("SGD")
	conR.set_save_steps(10)
	conR.set_valid_steps(10)
	conR.set_early_stopping_patience(10)
	conR.set_checkpoint_dir("./checkpoint")
	conR.set_result_dir("./result")
	conR.set_test_link(True)
	conR.set_test_quadruple(True)
	conR.set_pretrain_model(transe_state_dict)
	conR.init()
	conR.set_train_model(TransR)
	conR.train()

transR_main()